
name: "regulator-app-server"

x-type: "hlfv1"

description: "Regulator app server"

version: "1.0"

channels:
  mychannel:
    orderers:
      - orderer0.example.com
      - orderer1.example.com

    peers:
      peer0.ro.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1.ro.example.com:
        endorsingPeer: false
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: false

    chaincodes:
      - mycc:v0

#
# list of participating organizations in this network
#
organizations:
  RegulatorOrg:
    mspid: RegulatorOrgMSP
    peers:
      - peer0.ro.example.com
      - peer1.ro.example.com
    certificateAuthorities:
      - ca-ro
    adminPrivateKey:
      path: ../../../network/crypto-config/peerOrganizations/ro.example.com/users/Admin@ro.example.com/msp/keystore/5cfad16df41443fb0ee150c80d93b4aaaec48f5d6f87974df4b69ae542472e1d_sk
    signedCert:
      path: ../../../network/crypto-config/peerOrganizations/ro.example.com/users/Admin@ro.example.com/msp/signcerts/Admin@ro.example.com-cert.pem

#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer0.example.com:
    url: grpcs://localhost:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer0.example.com

    tlsCACerts:
      path: ../../../network/crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls/ca.crt

  orderer1.example.com:
    url: grpcs://localhost:7059

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer1.example.com`

    tlsCACerts:
      path: ../../../network/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/ca.crt

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.co.example.com:
    # this URL is used to send endorsement and query requests
    url: grpcs://localhost:7051

    # this URL is used to connect the EventHub and registering event listeners
    eventUrl: grpcs://localhost:7053

    grpcOptions:
      ssl-target-name-override: peer0.co.example.com
    tlsCACerts:
      path: ../../../network/crypto-config/peerOrganizations/co.example.com/peers/peer0.co.example.com/tls/ca.crt

  peer1.co.example.com:
    url: grpcs://localhost:7056
    eventUrl: grpcs://localhost:7058
    grpcOptions:
      ssl-target-name-override: peer1.co.example.com
    tlsCACerts:
      path: ../../../network/crypto-config/peerOrganizations/ro.example.com/peers/peer1.ro.example.com/tls/ca.crt

  peer0.ro.example.com:
    url: grpcs://localhost:8057
    eventUrl: grpcs://localhost:8059
    grpcOptions:
      ssl-target-name-override: peer0.ro.example.com
    tlsCACerts:
      path: ../../../network/crypto-config/peerOrganizations/ro.example.com/peers/peer0.ro.example.com/tls/ca.crt

  peer1.ro.example.com:
    url: grpcs://localhost:8069
    eventUrl: grpcs://localhost:8069
    grpcOptions:
      ssl-target-name-override: peer1.ro.example.com
    tlsCACerts:
      path: ../../../network/crypto-config/peerOrganizations/ro.example.com/peers/peer1.ro.example.com/tls/ca.crt

  peer0.spo.example.com:
    url: grpcs://localhost:8051
    eventUrl: grpcs://localhost:8053
    grpcOptions:
      ssl-target-name-override: peer0.spo.example.com
    tlsCACerts:
      path: ../../../network/crypto-config/peerOrganizations/spo.example.com/peers/peer0.spo.example.com/tls/ca.crt

  peer1.spo.example.com:
    url: grpcs://localhost:8056
    eventUrl: grpcs://localhost:8058
    grpcOptions:
      ssl-target-name-override: peer1.spo.example.com
    tlsCACerts:
      path: ../../../network/crypto-config/peerOrganizations/co.example.com/peers/peer1.spo.example.com/tls/ca.crt

certificateAuthorities:
  ca-ro:
    url: https://localhost:8052
    # the properties specified under this object are passed to the 'http' client verbatim when
    # making the request to the Fabric-CA server
    httpOptions:
      verify: false
    tlsCACerts:
      path: ../../../network/crypto-config/peerOrganizations/ro.example.com/ca/ca.ro.example.com-cert.pem

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca-ro
